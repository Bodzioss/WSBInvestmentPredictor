// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WSBInvestmentPredictor.Expenses.Infrastructure.Data;

#nullable disable

namespace WSBInvestmentPredictor.Expenses.Infrastructure.Migrations
{
    [DbContext(typeof(ExpensesDbContext))]
    [Migration("20250629210903_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("WSBInvestmentPredictor.Expenses.Domain.Categorization.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WSBInvestmentPredictor.Expenses.Domain.Categorization.CategoryRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FieldType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Keyword")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryRules");
                });

            modelBuilder.Entity("WSBInvestmentPredictor.Expenses.Shared.Models.BankTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Account")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("BalanceAfterTransaction")
                        .HasColumnType("TEXT");

                    b.Property<string>("BalanceCurrency")
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("BankName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("BlockedAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("BlockedCurrency")
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Counterparty")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("Details")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PaymentAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentCurrency")
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Account");

                    b.HasIndex("Counterparty");

                    b.HasIndex("TransactionDate");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("WSBInvestmentPredictor.Expenses.Domain.Categorization.CategoryRule", b =>
                {
                    b.HasOne("WSBInvestmentPredictor.Expenses.Domain.Categorization.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
