@page "/predict"
@inject HttpClient Http
@using System.Net.Http.Json
@using WSBInvestmentPredictor.Prediction.Models

<h3>📈 Prediction</h3>

<EditForm Model="@input" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Date</label>
        <InputText class="form-control" @bind-Value="input.Date" />
    </div>
    <div class="form-group">
        <label>Open</label>
        <InputNumber class="form-control" @bind-Value="input.Open" />
    </div>
    <div class="form-group">
        <label>High</label>
        <InputNumber class="form-control" @bind-Value="input.High" />
    </div>
    <div class="form-group">
        <label>Low</label>
        <InputNumber class="form-control" @bind-Value="input.Low" />
    </div>
    <div class="form-group">
        <label>Close</label>
        <InputNumber class="form-control" @bind-Value="input.Close" />
    </div>
    <div class="form-group">
        <label>Volume</label>
        <InputNumber class="form-control" @bind-Value="input.Volume" />
    </div>

    <button class="btn btn-primary mt-2" type="submit">Predict</button>
</EditForm>

@if (predictionResult is not null)
{
    <div class="alert alert-success mt-3">
        <strong>Prediction (30d return):</strong> @predictionResult.Value.ToString("P2")
    </div>
}

@code {
    private MarketDataInput input = new();
    private float? predictionResult;

    private async Task HandleValidSubmit()
    {
        var payload = new List<MarketDataInput> { input };

        var response = await Http.PostAsJsonAsync("/api/Prediction/predict-from-raw", payload);

        if (response.IsSuccessStatusCode)
        {
            var json = await response.Content.ReadFromJsonAsync<PredictionDto>();
            predictionResult = json?.prediction;
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            Console.Error.WriteLine($"API error: {response.StatusCode} - {error}");
        }
    }

    public class PredictionDto
    {
        public float prediction { get; set; }
    }
}
